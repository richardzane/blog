(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{681:function(t,v,s){"use strict";s.r(v);var _=s(17),p=Object(_.a)({},(function(){var t=this,v=t.$createElement,s=t._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"解决跨域问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域问题"}},[t._v("#")]),t._v(" 解决跨域问题")]),t._v(" "),s("p",[t._v("参考文章：")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/qq_38128179/article/details/84956552")]),t._v(" "),s("p",[t._v("浏览器的同源策略，同源的意思就是两个 url 具有相同的协议、主机地址和端口号，所以当请求的 url 和浏览器当前页面的 url 不同时，就是跨域。这里的不同包括协议、域名和端口号其中的任意一个。")]),t._v(" "),s("p",[t._v("前端解决跨域的方式：")]),t._v(" "),s("ul",[s("li",[t._v("在一般项目中可以使用 jsonp，它的缺点是只支持 get 请求。具体操作是，设置 script 标签的 src 属性，请求 url 后面跟上回调函数的名称，然后在另一个 script 标签中定义这个回调函数，接收传回来的值：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script src="http://test.com/data.php?callback=getData"><\/script>\n<script>\n\tfunction getData(result){\n\t\tconsole.log(result)\n\t}\n<\/script>\n')])])]),s("ul",[s("li",[t._v("在 vue 项目中可以设置代理，它的缺点是打包项目之后这个代理就失效了。具体操作是，修改 vue.config.js 文件里面 devServer 的 proxy 的值：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module.exports = {\n\tdevServer: {\n\t\tproxy: {\n\t\t\t\n\t\t}\n\t}\n}\n")])])]),s("p",[t._v("后端解决跨域的方式：设置 cors 。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"http-和-https-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https-的区别"}},[t._v("#")]),t._v(" http 和 https 的区别")]),t._v(" "),s("p",[t._v("一、端口不同，http的端口是80，https 的端口是443；")]),t._v(" "),s("p",[t._v("二、安全性不同，https 比 http 更加安全。")]),t._v(" "),s("p",[t._v("三、补充：")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"在浏览器中输入-url-并回车后都发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在浏览器中输入-url-并回车后都发生了什么"}},[t._v("#")]),t._v(" 在浏览器中输入 url 并回车后都发生了什么")]),t._v(" "),s("p",[t._v("第一步，解析 url：")]),t._v(" "),s("p",[t._v("url (universal resource locator)，统一资源定位符，俗称网页地址，用来表示某个资源的地址。")]),t._v(" "),s("p",[t._v("url 主要由以下几个部分组成：协议、服务器、域名、端口、虚拟目录、文件名、锚、参数。")]),t._v(" "),s("p",[t._v("url 的解析，是当在浏览器中输入 url 后，浏览器首先对拿到的 url 进行识别，抽取出域名字段。")]),t._v(" "),s("p",[t._v("第二部，dns 解析：")]),t._v(" "),s("p",[t._v("dns 解析，域名解析。dns 实际上是一个域名和 ip 对应的数据库。计算机之间是通过 ip 地址通信的，并且只能识别 ip 地址，不能识别域名。但是 ip 地址是一长串的数字，没有规律，往往难以记住，于是人们发明了域名，让域名和 ip 地址之间一一对应，它们之间的转换工作成为域名解析。")]),t._v(" "),s("p",[t._v("域名的解析需要专门的域名解析服务器来完成，整个过程是自动进行的。")]),t._v(" "),s("p",[t._v("在进行域名解析时，会经历以下步骤：")]),t._v(" "),s("p",[t._v("首先检查浏览器缓存。浏览器会将之前已经拿到的 dns 保留 2-30 分钟的时间。")]),t._v(" "),s("p",[t._v("如果浏览器缓存没有找到，就去检查系统缓存。查看电脑的 hosts 文件，这个文件保存了一些以前访问过的网站的域名和 ip 的记录，它就像是一个本地的数据库，如果找到找到对应的记录就可以直接知道目标主机的 ip 地址了。")]),t._v(" "),s("p",[t._v("如果系统缓存没有找到，就去检查路由器缓存。路由器有自己的 dns 缓存，可能就包括了要。")]),t._v(" "),s("p",[t._v("如果路由器缓存没有找到，就去检查 isp 因特网服务商的 dns 缓存。")]),t._v(" "),s("p",[t._v("如果在 isp dns 缓存里面没有找到，就递归查询。从根域名服务器到顶级域名服务器，再到极限域名服务器依次搜索对应目标域名的 ip。")]),t._v(" "),s("p",[t._v("第三步，浏览器和网站建立 tcp 连接（三次握手）")]),t._v(" "),s("p",[t._v("第一次握手：客户端向服务器端发送请求（syn = 1），等待服务器确认。")]),t._v(" "),s("p",[t._v("第二次握手：服务器收到请求并确认，回复一个指令。（syn=1,ack=1）")]),t._v(" "),s("p",[t._v("第三次握手：客户端收到服务器的回复指令并返回确认。（ack=1）")]),t._v(" "),s("p",[t._v("第四步，请求和传输数据：")]),t._v(" "),s("p",[t._v('比如要通过 get 请求访问 "http://www.baidu.com" 这个地址。通过抓包可以看到，请求的 url、请求方法 get、远程地址、状态码、http 版本、请求头和响应头等等。')]),t._v(" "),s("p",[t._v("第五步，浏览器渲染页面：")]),t._v(" "),s("p",[t._v("客户端拿到服务器传输过来的文件，找到 html 和 mime 文件，通过 mime 文件，浏览器就知道要用页面渲染引擎来处理 html 文件。")]),t._v(" "),s("p",[t._v("1、浏览器会解析 html 源码，创建一个 dom 树。")]),t._v(" "),s("p",[t._v("在 dom 树中，每个 html 标签都有一个对应的节点，并且每一个文本也都会有一个相对应的文本节点。")]),t._v(" "),s("p",[t._v("2、浏览器解析 css 代码，计算。")])])}),[],!1,null,null,null);v.default=p.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{671:function(e,t,s){"use strict";s.r(t);var i=s(17),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"控制左侧菜单的访问权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制左侧菜单的访问权限"}},[e._v("#")]),e._v(" 控制左侧菜单的访问权限")]),e._v(" "),s("p",[e._v("这个功能主要是通过使用 v-if 显示或者隐藏 el-menu-item 菜单项来实现的。一开始要求用户进行登录，登录成功以后，向后台发送请求，获取到用户的信息。这个用户信息里面包含了一个 permission 权限数组，这个 permissions 数组的每个元素都是一个代表菜单路径的字符串，比如用户列表的菜单路径对应的字符串是 /user，增加用户的菜单路径对应的字符串是 /user/add。在模板中遍历 el-menu-item 菜单项的时候，在 v-if 里面使用 includes() 方法，判断当前菜单的路径是否包括在 permission 权限数组之中，如果包括就显示菜单项，否则隐藏菜单项。这大概就是整个功能的实现过程。")]),e._v(" "),s("hr"),e._v(" "),s("h1",{attrs:{id:"给角色分配权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给角色分配权限"}},[e._v("#")]),e._v(" 给角色分配权限")]),e._v(" "),s("p",[e._v("一个角色可以拥有多个权限，一个权限也可以分配给多个角色。给角色分配权限主要是利用 element-ui 框架提供的 el-tree 树形控件来实现的。")]),e._v(" "),s("p",[e._v("首先要渲染这个树形控件。一开始进入分配权限的页面，把传进来的角色 id 作为参数，向后台发送请求，获取到所有的权限列表和当前角色所拥有的权限的 id 列表。把所有的权限列表赋值给 el-tree 的 data 属性，让树形控件显示出来；给 el-tree 加上 show-checkbox 属性，让树形控件可以选择节点；把刚才获取到的当前角色拥有的权限的 id 列表赋值给 el-tree 的 default-checked-keys 属性，让树形控件显示默认选中的节点。")]),e._v(" "),s("p",[e._v("渲染完树形控件之后，就可以开始选中权限节点。使用控件提供的 getHalfCheckedKeys() 方法获取半选中节点的 id 列表，这里说的半选中节点代表父级节点；使用控件提供的 getCheckedKeys() 方法获取选中节点的 id 列表，这里说的选中节点代表叶子节点。把这两个 id 列表组合起来，构成一个当前角色选中的权限的 id 列表。把角色 id 和当前角色选中的权限的 id 列表作为参数，向后台发送请求，给角色分配权限。这大概就是整个功能的实现过程。")]),e._v(" "),s("hr")])}),[],!1,null,null,null);t.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{661:function(t,s,a){"use strict";a.r(s);var i=a(17),e=Object(i.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-盒子模型"}},[t._v("#")]),t._v(" css 盒子模型")]),t._v(" "),a("ul",[a("li",[t._v("css 盒子模型包括 w3c 标准盒子模型和 ie 盒子模型。")]),t._v(" "),a("li",[t._v("w3c 标准盒子模型的宽高仅仅包括 content 内容，并不包括 padding 内边距和 border 边框；而 ie 盒子模型的宽高包括了 content 内容、padding 内边距和 border 边框。")]),t._v(" "),a("li",[t._v("可以通过设置 box-sizing 的值为 border-box，将 w3c 标准盒子模型转化为 ie 盒子模型；box-sizing 的值默认是 content-box。")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-height-和-line-height-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-height-和-line-height-的区别"}},[t._v("#")]),t._v(" css height 和 line-height 的区别")]),t._v(" "),a("ul",[a("li",[t._v("如果只给元素设置了 line-height，那么元素的高度等于行高*文字的行数。")]),t._v(" "),a("li",[t._v("如果只给元素设置了 height，那么元素的高度是固定不变的。")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-选择器"}},[t._v("#")]),t._v(" css 选择器")]),t._v(" "),a("ul",[a("li",[t._v("id 选择器")]),t._v(" "),a("li",[t._v("类选择器、属性选择器、伪类选择器")]),t._v(" "),a("li",[t._v("标签选择器、伪元素选择器")]),t._v(" "),a("li",[t._v("后代选择器、子代选择器、相邻选择器、通配符选择器")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-可以继承的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-可以继承的属性"}},[t._v("#")]),t._v(" css 可以继承的属性")]),t._v(" "),a("ul",[a("li",[t._v("font-size 文字大小；")]),t._v(" "),a("li",[t._v("color 文字颜色；")]),t._v(" "),a("li",[t._v("line-height 行高；")]),t._v(" "),a("li",[t._v("visibility 可见性；")]),t._v(" "),a("li",[t._v("cursor 鼠标形状；")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-样式权重-优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-样式权重-优先级"}},[t._v("#")]),t._v(" css 样式权重（优先级）")]),t._v(" "),a("ul",[a("li",[t._v("!important 的权重是 ∞；")]),t._v(" "),a("li",[t._v("行内样式的权重是 1000；")]),t._v(" "),a("li",[t._v("id 选择器的权重是 0100；")]),t._v(" "),a("li",[t._v("类选择器、属性选择器、伪类选择器的权重是 0010；")]),t._v(" "),a("li",[t._v("标签选择器、伪元素选择器的权重是 0001；")]),t._v(" "),a("li",[t._v("后代选择器、子代选择器、相邻选择器、通配符选择器的权重是 0000；")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-画三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-画三角形"}},[t._v("#")]),t._v(" css 画三角形")]),t._v(" "),a("p",[t._v("比如画一个向下的三角形，首先把元素的宽和高都设置为0，然后设置 border，比如给一条 8px 的实线的边框，最后设置 border-color 边框颜色，除了给上边框设置具体的颜色之外，其他的边框颜色都设置为 transparent 透明。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-实现不给宽高的元素水平垂直居中的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-实现不给宽高的元素水平垂直居中的方法"}},[t._v("#")]),t._v(" css 实现不给宽高的元素水平垂直居中的方法")]),t._v(" "),a("p",[t._v("我经常使用的方法主要有两种：一种是使用 flex 布局，设置父级元素的 display 的值为 flex，设置 justify-content 的值为 center，设置 align-items 的值为 center；另一种是使用 position 定位，子绝父相，设置父级元素的 position 的值为 relative，设置子元素的 position 的值为 absolute，设置 top 的值为 50%，设置 left 的值为 50%，设置 transform: translate 的值为（-50%,-50%）。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-display-的值和作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-display-的值和作用"}},[t._v("#")]),t._v(" css display 的值和作用")]),t._v(" "),a("p",[t._v("display 的值比较多。一个是 none，可以用来隐藏元素；一个 block，可以用来显示元素，或者将元素转换成块级元素；一个 inline-block，可以用来将元素转换成行内块元素；一个是 inline，可以用来将元素转换成行内元素；还有 flex，可以用来弹性布局。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-bfc"}},[t._v("#")]),t._v(" css BFC")]),t._v(" "),a("p",[t._v("bfc 的全称是 block formatting context，就是块级格式化上下文。我把它理解为页面上的一个独立的隔离的容器，在这个容器里面的子元素不管怎么布局，都不会影响到容器外面的其他元素。")]),t._v(" "),a("p",[t._v("我了解到的触发 bfc 的方法包括：让 float 的值不是 none；让 overflow 的值不是 visible；让 display 的值是 inline-block 或者 table-cell；让 position 的值是 fixed 或者 absolute。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-解决高度塌陷问题-清除浮动方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-解决高度塌陷问题-清除浮动方式"}},[t._v("#")]),t._v(" css 解决高度塌陷问题（清除浮动方式）")]),t._v(" "),a("ul",[a("li",[t._v("一种是在浮动的子元素的最后，添加一个额外的元素，设置 clear 的值为 both；")]),t._v(" "),a("li",[t._v("一种是设置父级元素的 overflow 的值为 hidden，触发 bfc；")]),t._v(" "),a("li",[t._v("一种是使用 ::before 单伪元素；")]),t._v(" "),a("li",[t._v("还有一种是结合使用 ::before 和 ::after 双伪元素。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('.clearfix::before {\n\tcontent: "";\n\tdisplay: block;\n\theight: 0;\n\tclear: both;\n\tvisibility: hidden;\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('.clearfix::before, .clearfix::after {\n\tcontent: "";\n\tdisplay: table;\n}\n.clearfix::after {\n\t\tclear: both;\n}\n')])])]),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-解决外边距合并问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-解决外边距合并问题"}},[t._v("#")]),t._v(" css 解决外边距合并问题")]),t._v(" "),a("ul",[a("li",[t._v("父子元素的外边距合并，给父级元素设置 padding-top 。")]),t._v(" "),a("li",[t._v("相邻元素的外边距合并，给其中一个元素设置 margin。")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-font-size-字体大小使用奇数还是偶数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-font-size-字体大小使用奇数还是偶数"}},[t._v("#")]),t._v(" css font-size 字体大小使用奇数还是偶数")]),t._v(" "),a("p",[t._v("一、偶数。浏览器渲染偶数大小字体的文字，会在网页中表现的更加对称和丰满，奇数显得略微单薄。比如渲染“中”字。")]),t._v(" "),a("p",[t._v("二、另外，移动端设计稿一般是 750px，但是调试通常以 375px 为标准，偶数方便做除法计算。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"position-的值以及作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position-的值以及作用"}},[t._v("#")]),t._v(" position 的值以及作用")]),t._v(" "),a("p",[t._v("positon 的值包括：")]),t._v(" "),a("ul",[a("li",[t._v("static：静态定位，默认定位，依附文档流。")]),t._v(" "),a("li",[t._v("fixed：固定定位，相对于浏览器窗口的定位，脱离文档流。")]),t._v(" "),a("li",[t._v("relative：相对定位，相对于自身的定位，依附文档流。如果设置了四个值，则只有 top 和 left 生效。")]),t._v(" "),a("li",[t._v("absolute：决定定位，相对于父级元素的定位，脱离文档流。如果设置了四个值，则都生效，元素展开。")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"实现双飞翼布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现双飞翼布局"}},[t._v("#")]),t._v(" 实现双飞翼布局")]),t._v(" "),a("p",[t._v("一、概念：双飞翼布局就是左右宽度固定，中间宽度动态变化。")]),t._v(" "),a("p",[t._v("二、实现：让中间、左边、右边依次向左浮动，中间宽度 100%，左边宽度 200px，向左移动 -100%，右边宽度 200px，向左移动 200px：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="demo">\n\t\t\t<div class="center">\n\t\t\t\tcenter\n\t\t\t</div>\n\t\t\t<div class="left"></div>\n\t\t\t<div class="right"></div>\n\t\t</div>\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("* {\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\n\t\t\t.demo {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 500px;\n\t\t\t}\n\n\t\t\t.demo>div {\n\t\t\t\tfloat: left;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\t.center {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding: 0 200px;\n\t\t\t\tbackground-color: red;\n\t\t\t}\n\n\t\t\t.left {\n\t\t\t\twidth: 200px;\n\t\t\t\tmargin-left: -100%;\n\t\t\t\tbackground-color: green;\n\n\t\t\t}\n\n\t\t\t.right {\n\t\t\t\twidth: 200px;\n\t\t\t\tmargin-left: -200px;\n\t\t\t\tbackground-color: blue;\n\t\t\t}\n")])])]),a("hr"),t._v(" "),a("h1",{attrs:{id:"reset-css-和-normalize-css-文件的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reset-css-和-normalize-css-文件的作用"}},[t._v("#")]),t._v(" reset.css 和 normalize.css 文件的作用")]),t._v(" "),a("p",[t._v("一、reset.css 文件用来重置元素的样式。")]),t._v(" "),a("p",[t._v("二、normalize.css 文件用来增强元素在不同浏览器上渲染的一致性，同时它也重置了部分元素的样式。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-精灵图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-精灵图"}},[t._v("#")]),t._v(" css 精灵图")]),t._v(" "),a("p",[t._v("一、使用：")]),t._v(" "),a("p",[t._v("结合设置 background-image 和 background-position，注意这里的位移是负数。")]),t._v(" "),a("p",[t._v("二、优缺点：")]),t._v(" "),a("ul",[a("li",[t._v("优点：节约网络资源。把许多小图片集中设计成一张大图片，浏览器只需加载一次大图片。")]),t._v(" "),a("li",[t._v("缺点：改动比较麻烦。把许多小图片集中在一起，如果要调整某个的位置，就会影响其他的位置，只能重新制作大图片。")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"css-display-none-和-visibility-hidden-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-display-none-和-visibility-hidden-的区别"}},[t._v("#")]),t._v(" css display:none; 和 visibility:hidden; 的区别")]),t._v(" "),a("p",[t._v("一、它们都可以用来隐藏元素。")]),t._v(" "),a("p",[t._v("二、display:none; 隐藏的元素在文档中是不占据位置的，visibility:hidden；隐藏的元素在文档中是占据位置的。")]),t._v(" "),a("p",[t._v("三、display:none；隐藏元素会造成回流和重绘，visibility:hidden; 隐藏元素只会造成重绘。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"opacity-和-rgba"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opacity-和-rgba"}},[t._v("#")]),t._v(" opacity 和 rgba")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("opacity 和 rgba 都可以用来设置元素的透明度。")])]),t._v(" "),a("li",[a("p",[t._v("opacity 的取值范围是 0-1；rgba 中的 r 表示 red 红色，g 表示 green 绿色，b 表示 black 黑色，它们是用来设置颜色的，取值范围是 0-255（或者百分数），rgba 中的 a 是用来设置透明度的，取值范围是 0-1。")])]),t._v(" "),a("li",[a("p",[t._v("子元素会继承父元素设置的 opacity，但是不会继承父元素设置的 rgba。")])])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"回流-重排-和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流-重排-和重绘"}},[t._v("#")]),t._v(" 回流（重排）和重绘")]),t._v(" "),a("p",[t._v("一、参考文章：")]),t._v(" "),a("ul",[a("li",[t._v("https://blog.csdn.net/a419419/article/details/90402561")]),t._v(" "),a("li",[t._v("https://segmentfault.com/a/1190000017329980")])]),t._v(" "),a("p",[t._v("二、大致理解的浏览器渲染过程如下：")]),t._v(" "),a("ul",[a("li",[t._v("渲染引擎通过 html 解析器解析 html，生成 dom tree（文档对象模型树）")]),t._v(" "),a("li",[t._v("渲染引擎通过 css 解析器解析 css，生成 cssom tree（css 对象模型树）")]),t._v(" "),a("li",[t._v("将 dom tree 和 cssom tree 结合起来，生成 render tree（渲染树）")]),t._v(" "),a("li",[t._v("浏览器根据渲染树进行回流，得到节点的几何信息")]),t._v(" "),a("li",[t._v("浏览器根据渲染树和几何信息进行重绘，得到节点的像素信息。")])]),t._v(" "),a("p",[t._v("三、元素大小的改变、位置的改变会导致回流重绘，元素文字颜色、背景颜色的改变只会导致重绘。")]),t._v(" "),a("p",[t._v("四、回流一定引起重绘，重绘不一定引起回流。")]),t._v(" "),a("hr")])}),[],!1,null,null,null);s.default=e.exports}}]);
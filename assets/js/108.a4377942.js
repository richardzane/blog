(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{677:function(v,_,t){"use strict";t.r(_);var e=t(17),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"项目的优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目的优化"}},[v._v("#")]),v._v(" 项目的优化")]),v._v(" "),t("p",[v._v("针对 vue 项目可以做的优化有：")]),v._v(" "),t("ul",[t("li",[v._v("使用 keep-alive 缓存组件；")]),v._v(" "),t("li",[v._v("使用路由懒加载；")]),v._v(" "),t("li",[v._v("对于获取到的数据，如果只是用来展示，可以使用 Object.freeze() 方法进行冻结；")]),v._v(" "),t("li",[v._v("如果频繁显示或者隐藏元素，使用 v-show 代替 v-if；")]),v._v(" "),t("li",[v._v("使用 element-ui 等框架的时候，按需引入它的组件；")])]),v._v(" "),t("p",[v._v("针对加载方面可以做的优化有：")]),v._v(" "),t("ul",[t("li",[v._v("尽量减少或者合并 http 请求，节约网络资源；")]),v._v(" "),t("li",[v._v("把 link 标签放在 head 标签的里面，这样不会造成闪屏问题；")]),v._v(" "),t("li",[v._v("把 script 标签放在 body 标签里面的最后，这样可以延迟加载；")])]),v._v(" "),t("p",[v._v("针对图片方面可以做的优化有：")]),v._v(" "),t("ul",[t("li",[v._v("使用精灵图，一次性加载一张大图片，节约网络资源；")]),v._v(" "),t("li",[v._v("使用图片懒加载插件；")]),v._v(" "),t("li",[v._v("可以使用响应式图片，img 标签有个 srcset 属性，可以针对不同的屏幕设置不同尺寸的图片；")]),v._v(" "),t("li",[v._v("使用 webp 格式的图片，它是谷歌开发出来的加快加载速度的一种图片格式，把其他格式的图片的体积更小；")]),v._v(" "),t("li",[v._v("如果可以的话，使用字体图标代替小图标，字体图标的加载速度更快；")])]),v._v(" "),t("p",[v._v("针对渲染方面可以做的优化，就是尽量减少回流和重绘。比如，如果要改变元素的位置，尽量使用 transfrom: translate 属性代替 margin 外边距；如果要给元素设置动画，尽量使用 window.requestAnimationFrame 方法代替定时器。")]),v._v(" "),t("p",[v._v("这大概就是我对项目优化的了解。")])])}),[],!1,null,null,null);_.default=i.exports}}]);
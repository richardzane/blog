(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{783:function(t,e,n){"use strict";n.r(e);var r=n(17),p=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"父向子传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#父向子传值"}},[t._v("#")]),t._v(" 父向子传值")]),t._v(" "),n("p",[t._v("子组件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n\t<div id=\"child-component\">\n        <p>{{childKey1}}</p>\n        <p>{{childKey2.id}}</p>\n        <p>{{childKey2.key}}</p>\n    </div>\n</template>\n<script>\n\texport default {\n        name: 'ChildComponent'\n        props: ['childKey1','child-key2']\n    }\n<\/script>\n")])])]),n("p",[t._v("父组件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n\t<div id=\"parent-component\">\n        <child-component :child-key1=\"parentKey1\" />\n        <chlid-component v-for=\"parentKey2 in parentKey2s\" :key=\"parentKey2.id\" :child-key2=\"parentKey2\"\n    </div>\n</template>\n<script>\n\timport ChildComponent from './ChildComponent'\n    export defalut {\n        name: 'ParentComponent',\n        data(){\n            return {\n                parentKey1: 'value',\n                parentKey2s: [\n                    {\n                        id: 1,\n                        key: 'value1'\n                    },\n                    {\n                        id: 2,\n                        key: 'value2'\n                    },\n                    {\n                        id: 3,\n                        key: 'value3'\n                    }\n                ]\n            }\n        }\n    }\n<\/script>\n")])])]),n("p",[t._v("说明：")]),t._v(" "),n("ul",[n("li",[t._v("不建议子组件修改从父组件传过来的值，父子数据不一致，而且子组件是依赖父组件传入值的；")]),t._v(" "),n("li",[t._v("从父组件到子组件的数据流向，叫做单向数据流；")]),t._v(" "),n("li",[t._v("vue 规定 props 里的变量本身是只读的；")])]),t._v(" "),n("hr"),t._v(" "),n("h1",{attrs:{id:"子向父传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#子向父传值"}},[t._v("#")]),t._v(" 子向父传值")]),t._v(" "),n("p",[t._v("子组件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n\t<div id=\"product\">\n        <p>{{product.id}}</p>\n        <p>{{product.name}}</p>\n        <p>{{product.price}}</p>\n        <p><button @click=\"reducePrice(product.id)\">reducePrice</button></p>\n    </div>\n</template>\n<script>\n\texport default {\n        name：'Product'\n        props: ['product'],\n        methods: {\n            reducePrice(id,number){\n                number=number?number:1\n                this.$emit('reduce-price',id,number)\n            }\n        }\n    }\n<\/script>\n")])])]),n("p",[t._v("父组件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n\t<div id="product-list">\n        <product v-for="product in productList" :key="product.id" :product="product" @reduce-price="reducePrice" />\n    </div>\n</template>\n<script>\n    export default {\n        name: \'ProductList\',\n        data(){\n            return {\n                productList: [\n                    {\n                        id: 1,\n                        name: \'product1\',\n                        price: 1\n                    },\n                    {\n                        id: 2,\n                        name: \'product2\',\n                        price: 2\n                    },\n                    {\n                        id: 3,\n                        name: \'product3\',\n                        price: 3\n                    }\n                ]\n            }\n        },\n        methods: {\n            reducePrice(id,number){\n                const productIndex = this.productList.findIndex(product=>product.id===id)\n                let productPrice = this.productList[productIndex].price\n                if(productPrice > number){\n                    productPrice = (productPrice-number).toFixed(2)\n                }\n                this.productList[productIndex].price = productPrice\n            }\n        }\n    }\n<\/script>\n')])])]),n("h1",{attrs:{id:"兄弟之间传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#兄弟之间传值"}},[t._v("#")]),t._v(" 兄弟之间传值")]),t._v(" "),n("p",[t._v("事件枢纽，创建 EventBus/index.js 文件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//默认导入 Vue 模块\nimpiort Vue from 'vue'\n//默认导出 Vue 对象\nexport default new Vue()\n")])])]),n("p",[t._v("兄弟组件1：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<template>\n\t<div id=\"\">\n\t\t<p>{{product.id}}</p>\n\t\t<p>{{product.name}}</p>\n\t\t<p>{{product.price}}</p>\n\t</div>\n</template>\n//默认导入 EventBus 模块\nimport EventBus from 'EventBus/index'\nexport default {\n\tprops: ['product']\n\tmethods: {\n\t\treducePrice(id){\n\t\t\tEventBus.$emit('update-price',id);\n\t\t}\n\t}\n}\n")])])]),n("p",[t._v("兄弟组件2：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//默认导入 EventBus 模块\nimport EventBus from 'EventBus/index'\nexport default {\n\tprops: ['productList'],\n\tcreated(){\n\t\tEventBus.$on('update-price',=>{\n\t\t\tconsole.log(funVal)\n\t\t})\n\t}\n}\n")])])])])}),[],!1,null,null,null);e.default=p.exports}}]);